plugins {
    id 'com.gradle.plugin-publish' version "1.2.0"
    id 'signing'
}

group 'org.attias.open.interactive.simulation'
version '1.0-SNAPSHOT'
var pluginDescription = "Plugin that can run and deploy simulation made by OpenSimualtion"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation group: 'org.attias.open.interactive.simulation', name: 'open-interactive-simulation-core', version: '1.0-SNAPSHOT'

    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.6.0.202305301015-r'

    testImplementation 'org.testng:testng:7.5'
}

gradlePlugin {
    plugins {
        SimulationDeployerPlugin {
            id = 'org.attias.open.interactive.simulation.deployer'
            displayName = "Open Simulation Deployer"
            description = pluginDescription
            implementationClass = 'org.attias.open.interactive.simulation.deployer.SimulationDeployerPlugin'
        }
    }
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            pom {
                name = rootProject.name
                description = pluginDescription
                url = 'https://github.com/attiasas/open-interactive-simulation-deployer'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = "attiasas"
                        name = "Assaf Attias"
                    }
                }

                scm {
                    connection.set("scm:git:git://github.com/attiasas/open-interactive-simulation-deployer.git")
                    developerConnection.set("scm:git:git@github.com/attiasas/open-interactive-simulation-deployer.git")
                    url = "https://github.com/attiasas/open-interactive-simulation-deployer"
                }
            }
        }
    }
}

signing {
    required = project.hasProperty("sign")
    var signingKey = findProperty("signingKey")
    var signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
}

tasks.named('test') {
    useTestNG()
}